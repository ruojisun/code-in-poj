#include <algorithm>
#include <iostream>
#include <cstring>
#include <cstdio>

using namespace std;

int mp[101][101];
int t,i,j,n,a,b;
void floyd()
{
	for(int i=1;i<=n;++i)
	{
		for(int j=1;j<=n;++j)
		{
			for(int k=1;k<=n;++k)
			mp[j][k]=min(mp[j][k],mp[j][i]+mp[i][k]);
		}
	}
}
int main()
{
	while(cin>>n)
	{
		if(!n) break;
		memset(mp,1,sizeof(mp));
		for(i=1;i<=n;++i)
		{
			cin>>t;
			while(t--)
			{
				cin>>a>>b;
				mp[i][a]=min(mp[i][a],b);
			}
		}
		floyd();
		int maxn,minn=0x7fffffff,v=-1;
		for(i=1;i<=n;++i)
		{
			int max=-1;
			for(j=1;j<=n;++j)
			if(max<mp[i][j]&&i!=j)
			max=mp[i][j];
			if(max<minn)
			{
				minn=max;
				v=i;
			}
		
		}
		if(v==-1)
		puts("disjoint");
		else cout<<v<<" "<<minn<<endl;
	}
	return 0;
}
