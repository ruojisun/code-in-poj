#include <algorithm>
#include <cstdio>
#define N 100005
int nextt[N<<1],to[N<<1],f[N],head[N],cnt,n,m,dep[N],fa[N],top[N],siz[N];
inline void ins(int u,int v)
{
	nextt[++cnt]=head[u];
	to[cnt]=v;
	head[u]=cnt;
}
void dfs1(int x)
{
	dep[x]=dep[fa[x]]+1;
	siz[x]=1;
	for(int i=head[x];i;i=nextt[i])
	{
		int v=to[i];
		if(fa[x]==v) continue;
		fa[v]=x;
		dfs1(v);
		siz[x]+=siz[v];
	}
}
void dfs2(int x)
{
	if(!top[x]) top[x]=x;
	int p=0;
	for(int i=head[x];i;i=nextt[i])
	{
		int v=to[i];
		if(fa[x]!=v&&siz[p]<siz[v]) p=v;
	}
	if(p) top[p]=top[x],dfs2(p);
	for(int i=head[x];i;i=nextt[i])
	{
		int v=to[i];
		if(fa[x]!=v&&p!=v) dfs2(v);
	}
}
void swap(int &m,int &n) {int tmp=m;m=n;n=tmp;} 
int lca(int x,int y)
{
	for(;top[x]!=top[y];x=fa[top[x]])
	 if(dep[top[x]]<dep[top[y]]) swap(x,y);
	return dep[x]<dep[y]?x:y;
}
void dp(int x)
{
	for(int i=head[x];i;i=nextt[i])
	{
		int v=to[i];
		if(fa[x]==v) continue;
		dp(v);
		f[x]+=f[v];
	}
}
int main(int argc,char *argv[])
{
	scanf("%d%d",&n,&m);
	for(int u,v,i=1;i<n;++i)
	{
		scanf("%d%d",&u,&v);
		ins(u,v);
		ins(v,u);
	}
	dfs1(1);dfs2(1);
	for(int u,v,i=1;i<=m;++i)
	{
		scanf("%d%d",&u,&v);
		f[u]++;f[v]++;
		f[lca(u,v)]-=2;
	}
	dp(1);
	long long ans=0;
	for(int i=2;i<=n;++i)
	 if(!f[i]) ans+=m;
	 else if(f[i]==1) ans++;
	printf("%lld",ans);
	return 0;
}
