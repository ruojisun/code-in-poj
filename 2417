#include <cstdio>
#include <cmath>
#include <map>
using namespace std;
map<long long,int>q;
int P,B,N;
long long ans;
bool flag=false;
long long ksm(int m,int n,int ha)
{
	long long r=1,base=m;
	for(;n;n>>=1)
	{
		if(n&1)
			r=(r*base)%ha;
		base=(base*base)%ha;
	}
	return r;
}
void bsgs(long long y,long long z,long long p)
{
	q.clear();
	int m=(int)ceil(sqrt((double)p));
	flag=false;
	q[1]=m+1;
	long long a=1;
	for(int i=1;i<m;i++)
	{
		a=a*y%p;
		if(!q[a]) q[a]=i;
	}
	long long inv=1;
	a=ksm(y,p-m-1,p);
	for(int k=0;k<m;k++)
	{
		long long an=z*inv%p;
		if(q[an])
		{
			int v=q[an];
			if(v==m+1) {ans=k*m;flag=true;return;}
			else {ans=k*m+v;flag=true;return ;}
		}
		inv=inv*a%p;
	}
}
int main()
{
	for(;scanf("%d%d%d",&P,&B,&N)!=EOF;)
	{
		if(B%P==0&&N==0) printf("1\n");
		else if(B%P==0) printf("no solution\n");
		else
		{
			bsgs(B,N,P);
			if(!flag) printf("no solution\n");
			else printf("%lld\n",ans);
		}
	}
	return 0;
}
